package nuig.prioritytokens.service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import org.junit.jupiter.api.Test;
import nuig.prioritytokens.exception.TokenizedCorpusMissingException;
import nuig.prioritytokens.service.MyProjectService;

public class MyProjectServiceTest 
{

	/**
	 * This tests the constructor created the objects
	 * This checks the size of the stop word arrayList generated by the constructor
	 */
	
	@Test
	public void testMyProjectService() 
	{
		MyProjectService testConstructor1 = new MyProjectService();
		assertNotNull(testConstructor1.emailReaderService);
		assertNotNull(testConstructor1.tfidfAnalyzerService);
		assertNotNull(testConstructor1.dictionaryAnalyzerService);
		assertNotNull(testConstructor1.stopWordsList);
		assertEquals(819, testConstructor1.stopWordsList.size());
	}

	
	/**
	 * This tests that a single email can be loaded from directory and 
	 * passed through each of the called methods and output to a specified folder
	 */
	@Test
	public void testLoadSingleEmail() 
	{
		MyProjectService testConstructor2 = new MyProjectService();
		testConstructor2.loadSingleEmail();
		assertNotNull(testConstructor2.singleEmailList);
		assertEquals(273, testConstructor2.singleEmailList.size());
	}
	
	
	/**
	 * This tests that a directory of emails can be loaded from directory and 
	 * passed through each of the called methods and output to a specified folder
	 */
	@Test
	public void testLoadTokenizedCorpus() 
	{
		MyProjectService testConstructor3 = new MyProjectService();
		testConstructor3.loadTokenizedCorpus(true);
		assertNotNull(testConstructor3.corpusOfEmailsList);
		assertEquals(17, testConstructor3.corpusOfEmailsList.size());
	}
	

	/**
	 * This tests if Method A will run after the single Email + Directory have been generated.
	 * A file should be output with the priority tokens
	 * @throws TokenizedCorpusMissingException 
	 */
	@Test
	public void testRunMethodA_TFIDF() throws TokenizedCorpusMissingException 
	{
		MyProjectService testConstructor4 = new MyProjectService();
		testConstructor4.loadSingleEmail();
		testConstructor4.loadTokenizedCorpus(true);
		testConstructor4.runMethodA_TFIDF();
		
		assertNotNull(testConstructor4.tfidfAnalyzerService);
	}

	
	/**
	 * This tests if Method B will run after the single Email + Directory have been generated.
	 * A file should be output with the priority tokens
	 * @throws TokenizedCorpusMissingException 
	 */
	@Test
	public void testRunMethodB_Dictionary() throws TokenizedCorpusMissingException 
	{
		MyProjectService testConstructor5 = new MyProjectService();
		testConstructor5.loadSingleEmail();
		testConstructor5.loadTokenizedCorpus(true);
		testConstructor5.runMethodB_Dictionary();
		assertNotNull(testConstructor5.dictionaryAnalyzerService);
	}

}
